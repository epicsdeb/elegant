#*************************************************************************
# Copyright (c) 2002 The University of Chicago, as Operator of Argonne
# National Laboratory.
# Copyright (c) 2002 The Regents of the University of California, as
# Operator of Los Alamos National Laboratory.
# This file is distributed subject to a Software License Agreement found
# in the file LICENSE that is included with this distribution. 
#*************************************************************************
#
# $Log: not supported by cvs2svn $
# Revision 1.11  2012/02/29 20:18:57  soliday
# Fixed a typo
#
# Revision 1.10  2011/03/10 15:29:31  soliday
# Updated the USR_CFLAGS
#
# Revision 1.9  2011/03/09 20:46:04  shang
# added sddssyncflux
#
# Revision 1.8  2011/03/09 02:21:50  lemery
# Added sddsbs
#
# Revision 1.7  2010/06/28 21:34:13  soliday
# One more change for purify on linux
#
# Revision 1.6  2010/06/28 21:29:54  soliday
# Updated the code for purify on Linux.
#
# Revision 1.5  2009/04/21 15:22:37  shang
# added sddsws
#
# Revision 1.4  2009/04/09 14:34:48  borland
# Added sddsfluxcurve.
#
# Revision 1.3  2006/08/24 19:20:06  soliday
# Updated so that it would compile on WIN32 again.
#
# Revision 1.2  2006/03/15 17:19:24  shang
# added compilation for sddsurgent
#
# Revision 1.1  2004/04/08 16:10:28  soliday
# Moved to subdirectory.
#
#
#

FFLAGS = -O4


CMPLR = ANSI

#RATIONAL = purify
#RATIONAL = quantify
#RATIONAL = purecov
ifdef RATIONAL
HOST_OPT = NO
STATIC_BUILD=NO
CC := $(RATIONAL) -best-effort $(CC)
CCC := $(RATIONAL) -best-effort $(CCC)
endif

#TARGETS = sddsbrightness$(EXE)
ifeq ($(EPICS_VERSION).$(EPICS_REVISION),3.13)
PROD = sddsurgent sddsbrightness sddsfluxcurve sddsws sddsbs sddssyncflux
else
PROD_HOST = sddsurgent sddsbrightness sddsfluxcurve sddsws sddsbs
endif

USR_CFLAGS =  -I$(EPICS_EXTENSIONS_INCLUDE) \
                -DIEEE_MATH -DzLib

USR_CFLAGS_DEFAULT = 	-DUNIX 
#USR_CFLAGS_Linux =	-Df2cFortran
#USR_CFLAGS_WIN32 = 	-DpgiFortran


GSLLIB = 

#Look for private version of GSL used here at APS
GSL = $(words $(wildcard $(EPICS_EXTENSIONS)/src/SDDS/gsl))
ifeq ($(GSL), 1)
PROD_HOST += sddssyncflux
sddssyncflux_CFLAGS = -I$(EPICS_EXTENSIONS)/src/SDDS/gsl -DUSE_GSL
GSLLIB = gsl
gsl_DIR = $(EPICS_EXTENSIONS_LIB)
else

#Look for system version of GSL
SYSGSL = $(words $(notdir $(wildcard \
/usr/lib/libgsl.a \
/usr/lib/libgsl.so \
/usr/lib64/libgsl.a \
/usr/lib64/libgsl.so \
/lib/libgsl.a \
/lib/libgsl.so \
/lib64/libgsl.a \
/lib64/libgsl.so \
/sw/lib/libgsl.a \
/sw/lib/libgsl.dylib \
/usr/sfw/lib/libgsl.a \
/usr/sfw/lib/libgsl.so )))

ifneq ($(SYSGSL), 0)
STATIC_BUILD=NO
PROD_HOST += sddssyncflux
sddssyncflux_CFLAGS = -DUSE_GSL
sddssyncflux_LDFLAGS += -lgsl -lgslcblas
endif
endif


XRAYLIB = 

#Look for private version of xraylib used here at APS
XRAY = $(words $(wildcard $(OAG_APPS)/src/xraylib))
ifeq ($(XRAY), 1)
PROD_HOST += sddscompton sddsxra sddsxrf
sddscompton_CFLAGS = -I$(OAG_APPS)/src/xraylib
sddsxra_CFLAGS = -I$(OAG_APPS)/src/xraylib
sddsxrf_CFLAGS = -I$(OAG_APPS)/src/xraylib
XRAYLIB = xrl
xrl_DIR = $(OAG_APPS)/lib/$(EPICS_HOST_ARCH)
else


#Look for system version of xraylib
SYSXRL = $(words $(notdir $(wildcard \
/usr/lib/libxrl.a \
/usr/lib/libxrl.so \
/usr/lib64/libxrl.a \
/usr/lib64/libxrl.so \
/lib/libxrl.a \
/lib/libxrl.so \
/lib64/libxrl.a \
/lib64/libxrl.so \
/sw/lib/libxrl.a \
/sw/lib/libxrl.dylib \
/usr/sfw/lib/libxrl.a \
/usr/sfw/lib/libxrl.so )))

ifneq ($(SYSXRL), 0)
STATIC_BUILD=NO
PROD_HOST += sddscompton sddsxra sddsxrf
sddscompton_LDFLAGS += -lxrl
sddsxra_LDFLAGS += -lxrl
sddsxrf_LDFLAGS += -lxrl
endif
endif

ifdef WIN32
USR_LIBS = $(XRAYLIB) oagphy mdbcommon matlib fftpack $(GSLLIB) SDDS1 rpnlib mdbmth namelist mdblib z fftpack
z_DIR = $(EPICS_EXTENSIONS_LIB)
else
USR_LIBS = $(XRAYLIB) oagphy mdbcommon matlib fftpack $(GSLLIB) SDDS1 rpnlib mdbmth namelist mdblib
SYS_PROD_LIBS_DEFAULT += z
endif

ifeq ($(HOST_ARCH),solaris)
ACC_DEP_CFLAGS = -KPIC -v
CCC_DEP_CFLAGS = -KPIC -v
GCC_DEP_CFLAGS += -D__EXTENSIONS__
endif

SDDS1_DIR = $(EPICS_EXTENSIONS_LIB)
namelist_DIR = $(EPICS_EXTENSIONS_LIB)
fftpack_DIR = $(EPICS_EXTENSIONS_LIB)
mdbmth_DIR = $(EPICS_EXTENSIONS_LIB)
matlib_DIR = $(EPICS_EXTENSIONS_LIB)
mdblib_DIR = $(EPICS_EXTENSIONS_LIB)
mdbcommon_DIR = $(EPICS_EXTENSIONS_LIB)
rpnlib_DIR = $(EPICS_EXTENSIONS_LIB)
oagphy_DIR = $(OAG_APPS)/lib/$(EPICS_HOST_ARCH)

USR_LDFLAGS += -L$(OAG_APPS)/lib/$(EPICS_HOST_ARCH)
sddsbrightness$(EXE)_SRCS =	sddsbrightness.c		

sddsfluxcurve$(EXE)_SRCS =	sddsfluxcurve.c		

sddsurgent$(EXE)_SRCS = sddsurgent.c

sddsws$(EXE)_SRCS = sddsws.c

sddsbs$(EXE)_SRCS = sddsbs.c

sddsxra$(EXE)_SRCS = sddsxra.c

sddscompton(EXE)_SRCS = sddscompton.c

sddsxrf(EXE)_SRCS = sddsxrf.c

OBJNAMES = sddsbrightness$(OBJ) usb$(OBJ) brighte$(OBJ) hunt$(OBJ)

URGENT_OBJNAMES = sddsurgent$(OBJ) urgent$(OBJ) us$(OBJ) brighte$(OBJ) hunt$(OBJ)

FLUXCURVE_OBJNAMES = sddsfluxcurve$(OBJ) us$(OBJ) brighte$(OBJ) hunt$(OBJ)

ifdef DEBUG
		USR_CFLAGS += -DDEBUG
endif

